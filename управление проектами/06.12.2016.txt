Предоставление обратной связи

В процессе деятельности возникают ситуации, когда руководитель должен отметить успехи сотрудников.
- позитивная обратная связь (поведение правильное, соответствующее задачам)
- негативная (что-то было не так)

Донести информацию, что сотрудник сделал что-то плохо, всегда сложнее, чем похвалить. 
Схема предоставления обратной связи:
1. Сотрудник совершил ошибку, которую вы хотите разобрать, чтобы её в будущем предотвратить.
Вообще говоря, её, может быть, можно ещё исправить.
2. Сформулируйте исходную задачу (как должны были развиваться действия и как они на самом деле развивались, какие отклонения были)
3. Как действовал сотрудник?
4. Оценка действий (соответствуют или не соответствуют действия? хорошо бы найти и позитивные моменты; например, вы начинающему сотруднику поставили задачу и ограничили время, а он оказался не готов к указанному сроку, и вы переносили и переносили дедлайны; в итоге вместо двух недель он делал задачу месяц. За что можно его, тем не менее, похвалить? Работа всё-таки выполнена, а может быть, выполнена хорошо. Но срок является не менее важным критерием, чем качество, и это тоже нужно донести до сотрудника.)
5. Совместными усилиями нужно предложить решение проблемы (если можно исправить проблему сейчас) или как её можно предотвратить в дальнейшем. Как нужно действовать, чтобы при возникновении ситуации ещё раз ошибки уже не повторялись? Хорошо бы, чтобы сотрудник сам предлагал какие-то варианты. Типичная ошибка руководителя -- в форме ультиматума говорить сотруднику, как он должен поступать (человек может закрыться и не включиться в правильное поведение в дальнейшем). 
Рассмотрим ту же ситуацию с начинающим сотрудником: 
- можно предложить промежуточные точки контроля;
- может быть, такое промедление связано с действиями других участников (тогда нужно объяснить человеку процессы взаимодействия в команде);
- возможно, человеку не хватало опыта, и он разбирался сам, вместо того, чтобы обратиться к коллегам за помощью (нужно организовать процесс консультирования сотрудника -- например, если человек сам не находит решение в течение получаса, он должен обратиться к коллегам; это может привести к обратной ситуации, когда человек постоянно всех отвлекает, и его вклад в проект отрицателен; здесь нужно найти баланс);
- может быть, вы оценили задачу в предположении, что её будет делать эксперт, и оценка получилась меньше, чем для начинающего (нужно понимать, для кого предназначена задача, и исходя из этого её оценивать).
Хорошо, когда в процессе обсуждения вы выясняете, почему так получилось, и как сделать, чтобы такого больше не повторилось.

Цель руководителя -- сделать, чтобы всё работало само, и нужно стремиться найти решение, которое позволит сотруднику решать проблему более эффективно. Такое решение в долгосрочной перспективе всегда более эффективно, чем просто контроль. Если сотрудник сам предлагает решение, оно, скорее всего, будет лучше работать для него, чем решение, предложенное руководителем. Нужно дать человеку самому проедложить решение, даже если вы сами аналогичную проблему решаете в сотый раз.

Избегайте неконструктивной критики (нельзя судить о качествах человека, ваша задача -- не исправить человека, а исправить его поведение в конкретной ситуации).

Дисциплина обязательств:
- обязательство: вид+объём+сроки задачи
- чтобы обязательства работали, должны выполняться следующие условия:
1. Обязательство берётся добровольно.
Например, если сотрудник берёт задачу с некоторой оценкой времени, он должен проверить адекватность оценки. 
2. Если сотрудник приходит к выводу, что он не может выполнить обязательство, он должен уведомить об этом руководителя.
У руководителя, как правило, найдутся некоторые резервы для решения задачи (добавить помощника, увеличить сроки, сузить задачу).
Начинающим сотрудникам трудно выполнять это условие. Индийские разработчики тоже страдают (в индийской культуре плохо говорить "нет", и разработчик до последнего говорит, что всё хорошо, и только к дедлайну выясняется, что на самом деле всё очень плохо).

===========================================================

Литература по управлению персоналом:
1. У. Паундстоун. Как сдвинуть гору Фудзи.
2. Т. Демарко, Т. Листер, Peopleware. 
Когда эта книга появилась, многие вещи были откровением, сейчас же многие предложенные советы используются повсеместно; многое, конечно, устарело и смотрится странно.
3. Р. Мередит Белбин. Команды менеджеров.
Как можно объединять людей в команды на основании их личных качеств, чтобы полученные команды были наиболее эффективны.

Замечание:
- по книге нужно написать мини-отчёт по следующему плану:
1. Что понравилось и почему?
2. Что не понравилось и почему?
3. Что конкретно вы планируете использовать в своём проекте? (в учебном проекте, например; можно пофантазировать)
4. Как вы собираетесь внедрять знания в проект?
5. Критерий оценки эффективности внедрения (например, вы внедрили новые знания; прошёл год, и как измерить, что изменилось и как?)

===========================================================

Управление рисками

На картинке -- система обработки багажа в аэропорту Денвера. Это классический пример провального проекта разработки ПО. Фактически аэропорт должен был открыться в 1993 году, но не открылся. В качестве основной проблемы была выдвинута неготовность системы управления багажными тележками. Аэропорт открылся только в 1995, и система работала частично. Лишь в двухтысячных годах она была переделана. Фактически, исходная система никогда так и не заработала.
Убытки проекта составили 500 млн долларов.
Когда ситуацию начали анализировать (постфактум), выяснились следующие детали:
- когда заказчик объявил конкурс на этот проект, ни одна компания не подала заявку (все понимали, что задача нереализуема, вероятность успеть к 1993 году практически равна нулю);
- была найдена компания, согласившаяся по принципу "сделаем как-нибудь";
- информация о том, что к 1993 году, скорее всего, успеть не удастся, уже была известна в самом начале, но руководители её проигнорировали.

Это классический пример того, что происходит, когда в проекте игнорируется проблема управления рисками.

Что вы, как генподрядчик, могли бы предложить, чтобы минимизировать риски в этой ситуации?
- оформить страхование;
- предусмотреть fail-safe решение в случае провала (вместо автоматической системы простую систему с грузчиками).

Что такое риск? Что такое хорошее управление рисками? Как ими управлять? Как начать управление рисками? Почему не все, несмотря на этот хрестоматийный пример, всё равно игнорируют управление рисками?

Что такое риск? Возможное событие, которое может оказать влияние на ход выполнения проекта. Ключевое слово -- "может". Если вы точно знаете, что некоторое событие окажет влияние на ваш проект, то это не риск. Это факт, который нужно учитывать при планировании.
Рассмотрим пример:
- мы планируем проект, сейчас 1 декабря, у нас есть 3 месяца и 5 человек, все учатся на матмехе;
- в это время, как известно, происходит сессия; это риск или факт?
- это данность: дополнительное время сотрудникам всё равно понадобится;
- если вы изначально про это не подумали (может, Васе придётся больше времени, а может и нет), то это отношение к сессии как к риску, но оно приведёт, скорее всего, к тому, что всё развалится;
- тем не менее, есть и элементы риска: если человек вылетит, то у него появится больше времени на работу; но он может быть из другого города или попадать под призыв, и, может быть, вообще не сможет продолжить участие в проекте;
- получается, что сессия может и позитивно повлиять на ваш проект, то есть риски бывают и позитивные;
- однако же, на практике, как правило, не рассматривают позитивные риски, и внимание в первую очередь обращается на негативные риски, о них и пойдёт речь далее.

Из чего состоит риск?
Говоря про риск, можно говорить про его разные части. Риск может быть самим событием или тем эффектом, которое случившееся событие оказывает на проект, или результатом, который получается при реализации риска.
Принято выделять 4 части риска:
1. Причина
2. Условия
3. Последствия
4. Ущерб
Пример: сгорел жёсткий диск.
- причина: перепады напряжения в сети
- условия (как понять, что риск реализовался): мигнула лампочка, запищали компьютеры
- последствия: сгорел HDD
- ущерб: обычно VCS обеспечивают, что результаты работы хранятся удалённо, и потеряете вы максимум результат работы за день; возможно, вы потеряли бэкап ваших данных и т.д.

Зачем управлять рисками?
Вы получаете несколько преимуществ:
- количественное измерение неопределённости (при оценке всегда есть элемент неопределённости, вы всегда получаете некоторый интервал вокруг вашей оценки; управление рисками -- хороший инструмент, позволяющий измерить неопределённость)
- возможность браться за проекты с неопределённостью (например, вы обсуждаете проект, в котором очень много точек, в которых что-то может пойти не так, и в такой ситуации типичная реакция "слишком велика неопределённость, давайте не будем за это браться", страшно, всё может пойти не так; количественное измерение и возможность аккуратно оценить определённость -- преимущество управления рисками)
- более адекватное понимание того, что такое успех (наивное представление -- это "вы шли-шли-шли и пришли в ровно ту точку, в которую планировали", но в большинстве случаев у вас есть не точка, а область, попадание в которую можно считать успехом; не всегда 100% попадание -- это цель, к которой надо стремиться)
- предотвращение неожиданностей (вы заранее готовитесь к разным ситуациям, и они для вас не гром среди ясного неба, а неприятное, но прогнозируемое событие)
- разграничение ответственности
- концентрация усилий на нужных фронтах