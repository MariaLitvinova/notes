Сделать надо одну задачу.

1. Car pooling
У нас есть город, заданный графом дорог. Дороги строим на основе центростремительной схемы (есть периферия с малым числом дорог и центр с большим).
Есть люди, которым надо доехать из точек A1 в B1, A2 в B2,... (в основном из периферии в центр)
Люди могут:
- поехать поодиночке
- договориться с кем-то и поехать вместе
Задача: подобрать такой вариант, чтобы минимизировать общее пройденное машинами расстояние.
2. Traffic
Та же дорожная сеть; те же люди.
Теперь задача - более равномерно распределиться по дорожной сети.
Формально: у каждой дороги есть время, которое на ней проводит машина (изначально пропорционально длине). С увеличением машин на дороге оно меняется (каждая машина, например, увеличивает его на 10%). Задача: оптимизировать общее время в пути.
3. Conference
Есть конференция, доклады, слушатели. У слушателей есть интересы (разной силы). Конференция идёт в несколько потоков, и параллельно может идти несколько докладов. Если у слушателя возникает ситуация, когда есть конфликт, он идёт на один и выгоды не получает.
Задача:
- минимизировать коллизии
- максимизировать полезность
(сколько интересных докладов посетят слушатели)

Для всех задач:
- сравниваться с базовым решением (для 1-2 - поиск кратчайшего пути; для конференций: 10 случайных расписаний и выбираем лучшее)
- системы делать воспроизводимыми (сгенерировать несколько примеров и запускать на них)

Можно объединяться в команды (не более трёх человек).
Сроки: до экзамена
Инструментарий: 
- JADE (можно использовать что-то другое, в том числе своё, но у агентов должна быть асинхронная неблокирующая коммуникация)

Замечание по 1-2:
- агентов может быть 2 типа (машина, человек), может быть 1 тип (только человек), можно вообще как-то по-другому
- ответ должен быть результатом социального взаимодействия 